{"version":3,"sources":["images/html.jpg","images/css.jpg","images/js3.jpg","components/Header/Navbar.jsx","components/Header/Header.js","screens/Signup/Signup.js","components/ScrapperData.js","screens/QuizList/QuizList.js","screens/Login/Login.js","screens/QuizInfo/QuizInfo.js","screens/StartQuiz/AnimProg.js","screens/StartQuiz/StartQuiz.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AdminNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateColor","window","innerWidth","state","collapseOpen","setState","color","toggleCollapse","toggleModalSearch","modalSearch","addEventListener","removeEventListener","logout","react_default","a","createElement","Fragment","Navbar","className","classNames","expand","Container","fluid","style","display","cursor","onClick","React","Component","Header","Header_Navbar","Signup","showPass","_this$props","updateText","showLogin","register","borderTop","justifyContent","alignItems","Card","border","width","margin","overflow","CardBody","FormGroup","Label","for","Input","type","name","id","placeholder","onChange","autoComplete","Button","ScrapperData","data","logos","getDataFromApi","fetch","then","response","text","$","cheerio","load","log","arr","arrM","each","i","elem","push","find","attr","siblings","console","catch","error","thisLogos","CardColumns","map","item","CardTitle","CardText","href","QuizList","list","onPress","components_Header_Header","quiz","index","maxWidth","CardImg","top","src","image","title","component","objectFit","borderRadius","height","alt","description","components_ScrapperData","Login","validation","showSignup","QuizInfo","onBack","subQuiz","minWidth","verticalAlign","score","CardHeader","attemptDate","attemptTime","questions","time","AnimatedProgressProvider","interval","undefined","isAnimated","_this2","repeat","setInterval","duration","clearInterval","_this3","es","start","value","valueStart","update","valueEnd","timing","ease","easingFunction","_ref","children","defaultProps","radioVal","sec","min","correct","scored","similey","handleChange","bind","assertThisInitialized","updating","quizTimer","timer","e","target","started","qstnNo","radio","document","querySelector","alert","qArr","length","answer","match","checked","toFixed","date","Date","saveScore","_this$state2","toLocaleDateString","toLocaleTimeString","SentimentVerySatisfiedRounded_default","SentimentVeryDissatisfiedRounded_default","SentimentSatisfiedRounded_default","SentimentDissatisfiedRounded_default","_this$state3","scoreCal","_this$props2","back","quizName","subQuizName","_this$state4","AnimProg","easeQuadInOut","roundedValue","Math","round","index_esm","concat","strokeWidth","styles","buildStyles","textColor","pathColor","trailColor","textSize","question","check","option1","option2","option3","option4","App","quizzes","require","quizIndex","subQuizIndex","validFlag","userFlag","userName","userEmail","userPass","loginEmail","loginPass","user","localStorage","getItem","checkValidation","joinQuiz","showList","startQuiz","nextQstn","setItem","_this$state","auth","nextQstnNo","screens_Login_Login","screens_Signup_Signup","screens_QuizList_QuizList","screens_QuizInfo_QuizInfo","StartQuiz","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","getElementById","URL","process","origin","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f449f6c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/html.3a0be16e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/css.77251c6a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/js3.f7d27ab8.jpg\";","import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Input,\r\n  InputGroup,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Modal\r\n} from \"reactstrap\";\r\n\r\nclass AdminNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapseOpen: false,\r\n      modalSearch: false,\r\n      color: \"navbar-transparent\"\r\n\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateColor);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateColor);\r\n  }\r\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n  updateColor = () => {\r\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\r\n      this.setState({\r\n        color: \"bg-white\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: \"navbar-transparent\"\r\n      });\r\n    }\r\n  };\r\n  // this function opens and closes the collapse on small devices\r\n  toggleCollapse = () => {\r\n    if (this.state.collapseOpen) {\r\n      this.setState({\r\n        color: \"navbar-transparent\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: \"bg-white\"\r\n      });\r\n    }\r\n    this.setState({\r\n      collapseOpen: !this.state.collapseOpen\r\n    });\r\n  };\r\n  // this function is to open the Search modal\r\n\r\n  toggleModalSearch = () => {\r\n    this.setState({\r\n      modalSearch: !this.state.modalSearch\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { logout } = this.props;  \r\n\r\n    return (\r\n      <>\r\n      \r\n        <Navbar\r\n          className={classNames(\"primary\")}\r\n          expand=\"lg\"\r\n          color=\"transparent\"\r\n        >\r\n          <Container fluid className=\"text-right\" style={{display:\"block\"}}>\r\n\r\n                    { logout? <i className=\"tim-icons icon-button-power\" style={{cursor:\"pointer\",color:\"#f3a4b5\"}} onClick={() => logout()}/>: null}\r\n\r\n          </Container>\r\n        </Navbar>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminNavbar;\r\n","import React, { Component } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Navbar from './Navbar';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const { logout } = this.props;  \n    return (\n      <>\n      <Navbar \n        {...this.props}\n        // brandText={this.getBrandText(this.props.location.pathname)}\n        // toggleSidebar={this.toggleSidebar}\n        // sidebarOpened={this.state.sidebarOpened}\n      />\n      </>\n\n      // <div >\n      //   <AppBar position=\"fixed\" color=\"primary\" >\n      //     <Toolbar>\n      //       <Typography variant=\"title\" color=\"inherit\" style={{flexGrow:'1',textAlign:'left'}}>\n      //         QuizCloud\n      //       </Typography>\n      //       { logout? <Button size=\"small\" color=\"inherit\" onClick={() => logout()}>LogOut</Button> : null}\n      //     </Toolbar>\n      //   </AppBar>\n      // </div>\n    )\n  }\n\n}\n\nexport default Header;\n\n//CHILD --> PARENT STATE UPDATE\n//=============================\n\n//1) Create a function in Parent that\n//will update the State.\n\n//2) Pass the function in the Child's\n//Component's Props\n\n//3) Call that function from Child Props.\n","import React, { Component } from 'react';\nimport '../../App.css';\nimport Header from '../../components/Header/Header'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\n\n// import Grid from '@material-ui/core/Grid';\n// import Email from '@material-ui/icons/Email';\n// import Lock from '@material-ui/icons/Lock';\n\n// import Input from '@material-ui/core/Input';\n// import Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport Typography from '@material-ui/core/Typography'; \nimport {\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    Button,\n    Card,\n    CardBody\n  } from \"reactstrap\";\n  \nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showPass: false\n        }\n    }\n\n    toggle() {\n        const { showPass } = this.state;\n\n        this.setState({\n            showPass: !showPass\n        })\n    }\n\n\n    render() {\n        const { updateText, showLogin, register} = this.props;\n        const { showPass } = this.state;\n        return (\n<div className=\"wrapper\">\n\n<div className=\"main-panel\" style={{borderTop:\"1px solid #f3a4b5\", display:\"flex\", justifyContent:\"center\",alignItems:\"center\"}}>\n<div>\n<Card style={{border: \"1px solid #f3a4b526\",width:\"20rem\",display:'inline-block',margin:\"0 0.54%\", overflow:\"hidden\"}}>\n    <CardBody className=\"text-right\">\n\n    <form>\n    <FormGroup className=\"text-left\">\n<Label for=\"Username\">Username</Label>\n<Input\nclassName=\"inputTransparent\"\n  type=\"text\"\n  name=\"name\"\n  id=\"Username\"\n  placeholder=\"Username\"\n  onChange={updateText}\n/>\n</FormGroup>\n<FormGroup className=\"text-left\">\n<Label for=\"userEmail\">Email address</Label>\n<Input\nclassName=\"inputTransparent\"\n  type=\"email\"\n  name=\"userEmail\"\n  id=\"userEmail\"\n  placeholder=\"Enter email\"\n  onChange={updateText}\n/>\n</FormGroup>\n<FormGroup className=\"text-left\">\n<Label for=\"userPassword\">Password</Label>\n<Input\n  type=\"password\"\n  name=\"userPassword\"\n  id=\"userPassword\"\n  placeholder=\"Password\"\n  onChange={updateText}\n  autoComplete=\"off\"\n  \n/>\n</FormGroup>\n<Button className=\"btn-link float-left\" onClick={showLogin}><code>Back</code></Button>\n\n<Button className=\"btn-link\" style={{border: \"1px solid #f3a4b526\"}} onClick={register}><code>Register</code></Button> \n</form>\n    {/* <CardTitle><h4 className=\"mb-0 text-left title-up text-uppercase\">{quiz.name}</h4></CardTitle>\n\n        <CardText><footer className=\"blockquote-footer  text-left\">{quiz.description}</footer></CardText>\n        <Button className=\"btn-link\" style={{border: \"1px solid #f3a4b526\"}} onClick={() => onPress(index)}><code>Join</code></Button> */}\n    </CardBody>\n</Card>\n</div>\n</div>\n</div>\n//             <div>\n//  <Header/>\n//                 <div className='mainDiv'>\n\n//                     <FormControl className=\"formDiv\">\n\n//                         <Typography variant=\"display2\" >\n//                             Sign Up\n//                         </Typography>\n//                         <br />\n//                         <TextField className=\"formEle\" id=\"input-with-icon-grid\"\n//                             // placeholder=\"abc@mail.com\"\n//                             // inputProps={{ maxLength: 17 }}\n//                             // fullWidth={true}\n//                             // style={{width:300}}\n//                             label=\"Username\"\n//                             type=\"text\"\n//                             onChange={updateText}\n//                             name=\"name\"\n//                             // helperText=\"Some important text\"\n//                             margin=\"normal\"\n//                         // required={true} \"show * means required\"\n//                         // error={true} \"shows like there is error\"\n//                         // multiline={true} \"behaves like textarea\"\n//                         />\n\n//                         <TextField className=\"formEle\" id=\"input-with-icon-grid\"\n\n//                             label=\"Email\"\n//                             type=\"email\"\n//                             onChange={updateText}\n//                             name=\"userEmail\"\n//                             margin=\"normal\"\n\n//                         />\n\n//                         <TextField className=\"formEle\" id=\"input-with-icon-grid\"\n//                             label=\"Password\"\n//                             type={showPass ? 'text' : 'password'}\n//                             onChange={updateText}\n//                             name=\"userPassword\"\n//                             margin=\"normal\"\n//                             InputProps={{\n//                                 endAdornment: (\n//                                     <InputAdornment position=\"end\">\n//                                         <IconButton\n//                                             aria-label=\"Toggle password visibility\"\n//                                             onClick={this.toggle.bind(this)}\n//                                         >\n//                                             {showPass ? <VisibilityOff /> : <Visibility />}\n//                                         </IconButton>\n//                                     </InputAdornment>\n//                                 ),\n//                             }}\n//                         />\n//                         <br />\n//                         <br />\n\n//                         <Button className=\"formEle\" variant=\"contained\" color=\"primary\" onClick={showLogin}>\n//                             Sign up\n//                 </Button>\n//                         <br /><br />\n\n//                         <Typography variant=\"body2\" >\n//                             Already on QuizCloud?\n//                 </Typography>\n\n//                         <Button className=\"formEle\" variant=\"contained\" color=\"secondary\" onClick={showLogin}>\n//                             sign in\n//                 </Button>\n\n//                     </FormControl>\n\n//                 </div>\n//             </div>\n        \n        );\n    }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport cheerio from \"cheerio\";\r\nimport renderHTML from \"react-render-html\";\r\nimport { Button, Col, Row, Card, CardBody, CardTitle, CardSubtitle, CardText, CardLink, CardColumns } from 'reactstrap';\r\nclass ScrapperData extends Component {\r\n  state = {\r\n    data: [],\r\n    logos: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDataFromApi();\r\n  }\r\n\r\n  getDataFromApi = () => {\r\n    fetch(\r\n      \"https://cors-anywhere.herokuapp.com/https://www.work.ua/jobs-kyiv-html%2C+css%2C+js/?advs=1&anyword=1\"\r\n    )\r\n      .then(response => response.text())\r\n      .then(data => {\r\n        const $ = cheerio.load(data);\r\n        var log = $(\".card.job-link\");\r\n        var arr = [];\r\n        var arrM = [];\r\n        log.each(function (i, elem) {\r\n          arr.push(\r\n            // $(this).find(\"h2\"),\r\n            $(this).find(\"h2 a\").text(),\r\n            $(this).find(\"b\").text(),\r\n            \"https://www.work.ua\" + $(this).find(\"h2 a\").attr(\"href\"),\r\n            $(this).find(\"h2\").siblings(\"p.overflow\").text(),\r\n            $(this).find(\"h2 span span\").text(),\r\n            \"<br/>\"\r\n          )\r\n          arrM.push(arr);\r\n          arr = [];\r\n        });\r\n        console.log(arrM);\r\n\r\n        this.setState({ logos: arrM });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error: error });\r\n      });\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const thisLogos = this.state.logos;\r\n    return <CardColumns className=\"col-8\">\r\n      {thisLogos.map(function name(item, i) {\r\n        return <Card style={{ border: \"1px solid #f3a4b526\", overflow: \"hidden\" }}>\r\n          <CardBody className=\"text-right\">\r\n            <CardTitle><h4 className=\"mb-0 text-left title-up text-uppercase\">{item[0]}</h4></CardTitle>\r\n            <CardText className=\"text-left\">{item[1]} <code> {item[4]}</code></CardText>\r\n            <CardText><footer className=\"blockquote-footer  text-left\">{item[3]}</footer></CardText>\r\n            <Button className=\"btn-link\" style={{ border: \"1px solid #f3a4b526\",color: \"#f3a4b5\"}} href={item[2]}><code>Open</code></Button>\r\n          </CardBody>\r\n        </Card>\r\n      })}\r\n    </CardColumns>;\r\n  }\r\n} export default ScrapperData;\r\n\r\n// render(<App />, document.getElementById(\"ScrapperData\"));\r\n","import React, { Component } from 'react';\nimport Header from '../../components/Header/Header'\nimport { Card, CardImg, CardBody, CardTitle, CardText, Button } from 'reactstrap';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n// import Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ScrapperData from '../../components/ScrapperData';\n\n\n\nclass QuizList extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const { list, onPress, logout } = this.props;\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main-panel\" style={{borderTop:\"1px solid #f3a4b5\"}}>\n        <Header logout={logout} />\n          <div>\n          {list.map((quiz, index) => {\n\n            return ( \n\n            <Card style={{border: \"1px solid #f3a4b526\",maxWidth: \"16rem\",display:'inline-block',margin:\"0 0.54%\", overflow:\"hidden\"}}>\n                <CardImg top src={quiz.image} title={quiz.name} component=\"img\" style={{ objectFit: 'cover' ,borderRadius:\"0\"}} height=\"160\" alt=\"...\"/>\n\n                <CardBody className=\"text-right\">\n                <CardTitle><h4 className=\"mb-0 text-left title-up text-uppercase\">{quiz.name}</h4></CardTitle>\n\n                    <CardText><footer className=\"blockquote-footer  text-left\">{quiz.description}</footer></CardText>\n                    <Button className=\"btn-link\" style={{border: \"1px solid #f3a4b526\"}} onClick={() => onPress(index)}><code>Join</code></Button>\n                </CardBody>\n            </Card>\n\n            )\n\n          }\n          )}\n          </div>\n          <hr/>\n        <ScrapperData/>\n        </div>\n\n        </div>\n\n\n    )\n  }\n\n}\n\nexport default QuizList;   \n","import React, { Component } from 'react';\nimport '../../App.css';\nimport Header from '../../components/Header/Header'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport List from '../QuizList/QuizList';\n\n// import { Card, CardImg, CardBody, CardTitle, CardText, Button, CardHeader } from 'reactstrap';\nimport {\n    FormGroup,\n    Label,\n    Input,\n    FormText,\n    Button,\n    Card,\n    CardBody\n  } from \"reactstrap\";\n\n// import Grid from '@material-ui/core/Grid';\n// import Email from '@material-ui/icons/Email';\n// import Lock from '@material-ui/icons/Lock';\n\n// import Input from '@material-ui/core/Input';\n// import Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport Typography from '@material-ui/core/Typography';  \n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showPass: false\n        }\n    }\n\n    toggle() {\n        const { showPass } = this.state;\n\n        this.setState({\n            showPass: !showPass\n        })\n    }\n\n    render() {\n\n        const { updateText, validation, showSignup } = this.props;\n        const { showPass } = this.state;\n        return (\n            <div className=\"wrapper\">\n\n            <div className=\"main-panel\" style={{borderTop:\"1px solid #f3a4b5\", display:\"flex\", justifyContent:\"center\",alignItems:\"center\"}}>\n            <div>\n            <Card style={{border: \"1px solid #f3a4b526\",width:\"20rem\",display:'inline-block',margin:\"0 0.54%\", overflow:\"hidden\"}}>\n                <CardBody className=\"text-right\">\n\n                <form>\n          <FormGroup className=\"text-left\">\n            <Label for=\"exampleEmail\">Email address</Label>\n            <Input\n            className=\"inputTransparent\"\n              type=\"email\"\n              name=\"loginEmail\"\n              id=\"exampleEmail\"\n              placeholder=\"Enter email\"\n              onChange={updateText}\n            />\n          </FormGroup>\n          <FormGroup className=\"text-left\">\n            <Label for=\"examplePassword\">Password</Label>\n            <Input\n              type=\"password\"\n              name=\"loginPass\"\n              id=\"examplePassword\"\n              placeholder=\"Password\"\n              onChange={updateText}\n              autoComplete=\"off\"\n              \n            />\n          </FormGroup>\n          <Button className=\"btn-link float-left\" onClick={showSignup}><code>Register</code></Button>\n          <Button className=\"btn-link\" style={{border: \"1px solid #f3a4b526\"}} onClick={validation}><code>Login</code></Button> \n          \n          \n           \n        </form>\n                {/* <CardTitle><h4 className=\"mb-0 text-left title-up text-uppercase\">{quiz.name}</h4></CardTitle>\n\n                    <CardText><footer className=\"blockquote-footer  text-left\">{quiz.description}</footer></CardText>\n                    <Button className=\"btn-link\" style={{border: \"1px solid #f3a4b526\"}} onClick={() => onPress(index)}><code>Join</code></Button> */}\n                </CardBody>\n            </Card>\n            </div>\n            </div>\n            </div>\n            //     <Header />\n            //     <div className='mainDiv'>\n\n\n            //         <FormControl className=\"formDiv\">\n\n            //             <Typography variant=\"display2\" >\n            //                 Sign In\n            //             </Typography>\n            //             <br />\n            //             <TextField className=\"formEle\" id=\"input-with-icon-grid\"\n            //                 // placeholder=\"abc@mail.com\"\n            //                 // inputProps={{ maxLength: 17 }}\n            //                 // fullWidth={true}\n            //                 // style={{width:300}}\n            //                 label=\"Email\"\n            //                 type=\"email\"\n            //                 onChange={updateText}\n            //                 name=\"loginEmail\"\n            //                 // helperText=\"Some important text\"\n            //                 margin=\"normal\"\n            //             // required={true} \"show * means required\"\n            //             // error={true} \"shows like there is error\"\n            //             // multiline={true} \"behaves like textarea\"\n            //             />\n\n\n            //             <TextField className=\"formEle\" id=\"input-with-icon-grid\"\n            //                 label=\"Password\"\n            //                 type={showPass ? 'text' : 'password'}\n            //                 onChange={updateText}\n            //                 name=\"loginPass\"\n            //                 margin=\"normal\"\n            //                 InputProps={{\n            //                     endAdornment: (\n            //                         <InputAdornment position=\"end\">\n            //                             <IconButton\n            //                                 aria-label=\"Toggle password visibility\"\n            //                                 onClick={this.toggle.bind(this)}\n            //                             >\n            //                                 {showPass ? <VisibilityOff /> : <Visibility />}\n            //                             </IconButton>\n            //                         </InputAdornment>\n            //                     ),\n            //                 }}\n            //             />\n            //             <br />\n\n\n            //             <Button className=\"formEle\" color=\"primary\" >\n            //                 Forgot password?\n            //             </Button>\n            //             <br />\n\n            //             <Button className=\"formEle\" variant=\"contained\" color=\"primary\" onClick={validation}>\n            //                 Sign In\n            //             </Button>\n            //             <br /><br />\n            //             <Typography variant=\"body2\" >\n            //                 New to QuizCloud?\n            //             </Typography>\n\n            //             <Button className=\"formEle\" variant=\"contained\" color=\"secondary\" onClick={showSignup}>\n            //                 Sign up\n            //             </Button>\n\n\n            //         </FormControl>\n\n\n            //     </div>\n            // </div>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport Header from '../../components/Header/Header'\nimport { Card, CardImg, CardBody, CardTitle, CardText, Button, CardHeader } from 'reactstrap';\n\n// import Card from '@material-ui/core/Card';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\n// import CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import Button from '@material-ui/core/Button';\n// import Typography from '@material-ui/core/Typography';\n\nclass QuizInfo extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const { quiz, onBack, onPress, logout } = this.props;\n    return (\n      <div className=\"wrapper\">\n\n        <div className=\"main-panel\" style={{borderTop:\"1px solid #f3a4b5\"}}>\n        <Header logout={logout} />\n      \n        {/* <h1>{quiz.name}</h1> */}\n        <div>\n\n          {quiz.subQuiz.map((subQuiz, index) => {\n            return (\n\n          <Card className=\"text-right\" style={{border: \"1px solid #f3a4b526\",minWidth:\"256px\",maxWidth: \"16rem\",display:'inline-block',margin:\"0 0.54%\", overflow:\"hidden\", verticalAlign:\"top\"}}>\n              <CardImg top src={quiz.image} title={subQuiz.name} component=\"img\" style={{ objectFit: 'cover' ,borderRadius:\"0\"}} height=\"160\" alt=\"...\"/>\n              {subQuiz.score ?\n              <>\n                <CardHeader><h4 className=\"mb-0 text-left title-up text-uppercase\">{subQuiz.name}</h4></CardHeader>\n                <CardBody className=\"text-right\">\n                    <CardTitle><p className=\"mb-0 text-left text-muted\">You have attempted this Quiz.</p></CardTitle>\n                    <CardText className=\"text-left\">\n                    <footer className=\"blockquote-footer  text-left\">\n                    Percentage: <code>{subQuiz.score}%</code>\n                         <br />\n                         Attempted Date: <code>{subQuiz.attemptDate}</code> \n                         <br />\n                         Attempted Time: <code>{subQuiz.attemptTime}</code></footer>\n                  </CardText>\n                  <Button className=\"btn-link\" style={{border: \"1px solid #f3a4b526\"}} onClick={onBack}><code>Back</code></Button>\n            {!subQuiz.score ? <Button className=\"btn-link\" style={{border: \"1px solid #f3a4b526\"}} onClick={() => onPress(index)}><code>Start</code></Button> : null}\n                </CardBody>\n                </>\n              :\n              <>\n                <CardHeader><h4 className=\"mb-0 text-left title-up text-uppercase\">{subQuiz.name}</h4></CardHeader>\n                  <CardBody className=\"text-right\">\n                    <CardTitle><p className=\"mb-0 text-left text-muted\">This Quiz is based on the following criteria:</p></CardTitle>\n                      <CardText className=\"text-left\">\n                    <footer className=\"blockquote-footer  text-left\">\n\n                      Total Questions: <code>{subQuiz.questions}</code>\n                       <br />\n                       Total Time: <code>{subQuiz.time}</code>\n                       <br />\n                       Passing Score: <code>60 %</code>\n                       </footer>\n                    </CardText>\n                    <Button className=\"btn-link\" style={{border: \"1px solid #f3a4b526\"}} onClick={onBack}><code>Back</code></Button>\n              {!subQuiz.score ? <Button className=\"btn-link\" style={{border: \"1px solid #f3a4b526\"}} onClick={() => onPress(index)}><code>Start</code></Button> : null}\n                  </CardBody>\n                  </>\n                }\n             \n          </Card>\n\n            )\n          })}\n        </div>\n      </div>\n      </div>\n    )\n  }\n\n}\n\nexport default QuizInfo;\n\n//CHILD --> PARENT STATE UPDATE\n//=============================\n\n//1) Create a function in Parent that\n//will update the State.\n\n//2) Pass the function in the Child's\n//Component's Props\n\n//3) Call that function from Child Props.\n","import React from \"react\";\r\nimport { Animate } from \"react-move\";\r\n\r\nclass AnimatedProgressProvider extends React.Component {\r\n  interval = undefined;\r\n\r\n  state = {\r\n    isAnimated: false\r\n  };\r\n\r\n  static defaultProps = {\r\n    valueStart: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.repeat) {\r\n      this.interval = window.setInterval(() => {\r\n        this.setState({\r\n          isAnimated: !this.state.isAnimated\r\n        });\r\n      }, this.props.duration * 1000);\r\n    } else {\r\n      this.setState({\r\n        isAnimated: !this.state.isAnimated\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.clearInterval(this.interval);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Animate\r\n        start={() => ({\r\n          value: this.props.valueStart\r\n        })}\r\n        update={() => ({\r\n          value: [\r\n            this.state.isAnimated ? this.props.valueEnd : this.props.valueStart\r\n          ],\r\n          timing: {\r\n            duration: this.props.duration * 1000,\r\n            ease: this.props.easingFunction\r\n          }\r\n        })}\r\n      >\r\n        {({ value }) => this.props.children(value)}\r\n      </Animate>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnimatedProgressProvider;\r\n","import React, { Component } from 'react';\nimport Header from '../../components/Header/Header'\n// import lightBlue from '@material-ui/core/colors/lightBlue';\nimport {\n  FormGroup,\n  Label,\n  Input,\n  Card,\n  CardBody,\n  CardTitle,\n  CardText,\n  Button\n} from \"reactstrap\";\n// import Button from '@material-ui/core/Button';\nimport NavigateNext from '@material-ui/icons/NavigateNext';\n\nimport SentimentSatisfied from '@material-ui/icons/SentimentSatisfiedRounded';\nimport SentimentVerySatisfied from '@material-ui/icons/SentimentVerySatisfiedRounded';\nimport SentimentDissatisfied from '@material-ui/icons/SentimentDissatisfiedRounded';\nimport SentimentVeryDissatisfied from '@material-ui/icons/SentimentVeryDissatisfiedRounded';\nimport { CircularProgressbar, buildStyles  } from 'react-circular-progressbar';\nimport AnimatedProgressProvider from './AnimProg';\nimport { easeQuadInOut } from \"d3-ease\";\nimport 'react-circular-progressbar/dist/styles.css';\n// import Radio from '@material-ui/core/Radio';\n// import RadioGroup from '';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n// import FormControl from '@material-ui/core/FormControl';\n// import FormLabel from '@material-ui/core/FormLabel';\n// \nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Typography from '@material-ui/core/Typography';\n\nclass QuizList extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n\n      radioVal: null,\n\n      sec: 0,\n      min: 3,\n\n      correct: 0,\n      scored: false,\n\n      similey: null,\n\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.updating = this.updating.bind(this);\n    this.quizTimer = this.quizTimer.bind(this);\n    this.timer()\n  }\n\n\n  handleChange(e) {\n    this.setState({\n      radioVal: e.target.value,\n    });\n    // setTimeout(this.updating,0)\n\n  }\n\n  async updating() {\n\n    const { started, qstnNo, onPress } = this.props;\n    const { correct, radioVal } = this.state;\n    var radio = document.querySelector(\"input[type='radio']:checked\");\n    if (radioVal == null) {\n      alert('Selection Required');\n    }\n\n    else {\n      if ((qstnNo === started.qArr.length - 1) && (started.qArr[qstnNo].answer.match(radioVal))) {\n\n        await this.setState({\n          correct: correct + 1,\n          min: 0,\n          sec: 0\n        })\n\n      }\n      else\n        if ((qstnNo === started.qArr.length - 1) && !(started.qArr[qstnNo].answer.match(radioVal))) {\n\n          await this.setState({\n            min: 0,\n            sec: 0\n          })\n\n        }\n        else\n          if (!(qstnNo === started.qArr.length - 1) && (started.qArr[qstnNo].answer.match(radioVal))) {\n\n            await this.setState({\n              correct: correct + 1,\n              radioVal: null,\n            })\n            radio.checked = false;\n            onPress(qstnNo);\n          }\n          else {\n            await this.setState({\n              radioVal: null,\n            })\n            radio.checked = false;            \n            onPress(qstnNo);\n          }\n    }\n  }\n\n  async scoreCal() {\n    const { started } = this.props;\n    const { correct } = this.state;\n\n    await this.setState({\n      scored: ((correct) * (100 / started.qArr.length)).toFixed(2),\n      date: new Date(),\n    })\n\n    this.saveScore();\n    // localStorage.setItem(\"score\", JSON.stringify(score))\n  }\n\n  saveScore() {\n    const { started } = this.props;\n    const { scored, date } = this.state;\n\n    started.score = scored;\n    started.attemptDate = date.toLocaleDateString();\n    started.attemptTime = date.toLocaleTimeString();\n\n    if (scored == 100) {\n      this.setState({\n        similey: <SentimentVerySatisfied className=\"similey\" color=\"disabled\" />\n      })\n    }\n    else\n      if (scored == 0) {\n        this.setState({\n          similey: <SentimentVeryDissatisfied className=\"similey\" color=\"disabled\" />\n        })\n      }\n      else\n        if (scored >= 60) {\n          this.setState({\n            similey: <SentimentSatisfied className=\"similey\" color=\"disabled\" />\n          })\n        }\n        else\n          if (scored < 60 && scored > 0) {\n            this.setState({\n              similey: <SentimentDissatisfied className=\"similey\" color=\"disabled\" />\n            })\n          }\n\n  }\n\n  quizTimer() {\n    const { sec, min } = this.state;\n\n    if ((sec === 0) && (min === 0)) {\n\n      clearInterval(this.time);\n\n      this.scoreCal();\n\n    }\n\n    else\n      if ((sec <= 0) && !(min === 0)) {\n\n        this.setState({\n          sec: 59,\n          min: min - 1,\n        })\n      }\n\n      else {\n        this.setState({\n          sec: sec - 1,\n        })\n      }\n\n  }\n\n  timer() {\n    this.time = setInterval(this.quizTimer, 1000);\n  }\n\n  render() {\n    const { started, qstnNo, back, quizName, subQuizName, logout } = this.props;\n    const { correct, scored, min, sec } = this.state;\n    return (\n           <div className=\"wrapper\">\n<div className=\"main-panel\" style={{borderTop:\"1px solid #f3a4b5\"}}>\n        <Header logout={logout} />\n\n        {scored !== false ?\n<>\n          \n<Card style={{border: \"1px solid #f3a4b526\",maxWidth: \"20rem\",display:'inline-block',margin:\"0 0.54%\", overflow:\"hidden\"}}>\n        <CardBody className=\"text-right\">\n        <CardText><footer className=\"blockquote-footer text-left\">{quizName}({subQuizName})</footer></CardText>\n        <div className=\"text-center\" style={{width:\"65%\", margin:\"0 auto\"}}>\n        <AnimatedProgressProvider\n        valueStart={0}\n        valueEnd={scored}\n        duration={1}\n        easingFunction={easeQuadInOut}\n      >\n        {value => {\n          const roundedValue = Math.round(value);\n          return (\n            <CircularProgressbar\n              value={value}\n              text={`${roundedValue}%`}\n              strokeWidth={2}\n              /* This is important to include, because if you're fully managing the\n        animation yourself, you'll want to disable the CSS animation. */\n              styles={buildStyles({ textColor: \"rgba(243, 164, 181, 0.15)\",\n              pathColor: \"rgba(243, 164, 181, 0.55)\",\n              trailColor: \"rgba(243, 164, 181, 0.15)\",\n              textSize: \"14px\"}\n              )}\n            />\n          );\n        }}\n      </AnimatedProgressProvider>\n      </div>\n        <CardTitle>\n        <p className=\"text-left text-muted\"> Total Questions: {started.qArr.length} <br/>  Correct: {correct}</p></CardTitle>\n        \n          <Button className=\"btn-link\" style={{border: \"1px solid #f3a4b526\"}} onClick={() => back()}><code>Back</code></Button>\n        </CardBody>\n         \n      </Card>\n            {/* <Typography variant=\"display1\" >\n              {quizName}({subQuizName})\n            </Typography>\n            <br />\n            <div className='resultDiv'>\n              <div >\n                <br />\n                <br />\n                <CircularProgress size={200} thickness={2} variant=\"static\" value={scored} />\n                {this.state.similey}\n                <Typography variant=\"headline\" >\n                  {scored} %\n                </Typography>\n                <br />\n                <Typography variant=\"subheading\" >\n                  Total Questions: {started.qArr.length}\n                </Typography>\n                <Typography variant=\"subheading\" >\n                  Correct: {correct}\n                </Typography>\n\n              </div>\n              <Button className=\"backBtn\" size='large' variant=\"contained\" color=\"primary\" onClick={() => back()}>\n                back\n              </Button>\n            </div> */}\n  </>\n          :\n        <>\n        <Card style={{border: \"1px solid #f3a4b526\",maxWidth: \"20rem\",display:'inline-block',margin:\"0 0.54%\", overflow:\"hidden\"}}>\n        <CardBody className=\"text-right\">\n        <CardText><footer className=\"blockquote-footer text-left\">{quizName}({subQuizName}) <code className=\"float-right\">{min}:{sec}</code></footer></CardText>\n        <CardTitle><h4 className=\"mb-0 text-left title-up\">{qstnNo + 1+ \" . \"+started.qArr[qstnNo].question}</h4></CardTitle>\n          <FormGroup className=\"text-left\" value={this.state.radioVal}\n                   onChange={this.handleChange}>\n          <FormGroup check  className=\"form-check-radio\">\n            <Label className=\"form-check-label\">\n                <Input type=\"radio\" name=\"exampleRadios1\" id=\"exampleRadios11\" value=\"1\" />\n                {started.qArr[qstnNo].option1}\n                <span className=\"form-check-sign\"></span>\n            </Label>\n          </FormGroup>\n          <FormGroup check  className=\"form-check-radio\">\n            <Label className=\"form-check-label\">\n              <Input type=\"radio\" name=\"exampleRadios1\" id=\"exampleRadios12\" value=\"2\" />\n              {started.qArr[qstnNo].option2}\n              <span className=\"form-check-sign\"></span>\n            </Label>\n          </FormGroup>\n          <FormGroup check  className=\"form-check-radio \">\n            <Label className=\"form-check-label\">\n              <Input type=\"radio\" name=\"exampleRadios1\" id=\"exampleRadios13\" value=\"3\"  />\n              {started.qArr[qstnNo].option3}\n              <span className=\"form-check-sign\"></span>\n            </Label>\n          </FormGroup>\n          <FormGroup check  className=\"form-check-radio \">\n            <Label className=\"form-check-label\">\n              <Input type=\"radio\" name=\"exampleRadios1\" id=\"exampleRadios14\" value=\"4\"  />\n              {started.qArr[qstnNo].option4}\n              <span className=\"form-check-sign\"></span>\n            </Label>\n          </FormGroup>\n          </FormGroup>\n          <Button className=\"btn-link\" style={{border: \"1px solid #f3a4b526\"}} onClick={() => back()}><code>Back</code></Button>\n             <Button className=\"btn-link\" style={{border: \"1px solid #f3a4b526\"}} onClick={this.updating.bind(this)}><code>Next</code></Button>\n        </CardBody>\n         \n      </Card>\n    </>\n          // <div> \n          //   <Header /> \n          //   <Typography variant=\"title\" >\n          //     {min}:{sec}\n          //   </Typography>\n          //   <br/>\n          //   <div className='qstnDiv'>\n\n\n\n          //     <FormControl component=\"fieldset\" style={{ margin: '15px 15px 30px 15px' }}>\n\n          //       <h3>{qstnNo + 1}. {started.qArr[qstnNo].question}</h3>\n          //       {/* <FormLabel component=\"legend\">Gender</FormLabel> */}\n          //       <RadioGroup\n          //         // aria-label=\"Gender\"\n          //         // name=\"gender1\"\n          //         // className={classes.group}\n          //         value={this.state.radioVal}\n          //         onChange={this.handleChange}\n          //         // onChange={(e) => {this.handleChange(e)}} ref={(input)=> this.myinput = input}\n          //       >\n\n          //         <FormControlLabel value=\"1\" name=\"option\" control={<Radio />} label={started.qArr[qstnNo].option1}/>\n          //         <FormControlLabel value=\"2\" name=\"option\" control={<Radio />} label={started.qArr[qstnNo].option2}/>\n          //         <FormControlLabel value=\"3\" name=\"option\" control={<Radio />} label={started.qArr[qstnNo].option3}/>\n          //         <FormControlLabel value=\"4\" name=\"option\" control={<Radio />} label={started.qArr[qstnNo].option4}/>\n\n          //       </RadioGroup>\n\n          //     </FormControl>\n\n\n          //   </div>\n\n          //   {/* <Button className=\"nextBtn\" variant=\"fab\" color=\"primary\" onClick={this.updating.bind(this)}>\n          //     <NavigateNext />\n          //   </Button> */}\n          // </div>\n\n        }\n</div>\n      </div>\n    )\n  }\n\n}\n\nexport default QuizList;\n\n//CHILD --> PARENT STATE UPDATE\n//=============================\n\n//1) Create a function in Parent that\n//will update the State.\n\n//2) Pass the function in the Child's\n//Component's Props\n\n//3) Call that function from Child Props.\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link ,Switch} from \"react-router-dom\";\n\nimport \"./assets/scss/black-dashboard-react.scss\";\nimport \"./assets/css/nucleo-icons.css\";\nimport Signup from './screens/Signup/Signup'\nimport Login from './screens/Login/Login'\nimport QuizList from './screens/QuizList/QuizList'\nimport QuizInfo from './screens/QuizInfo/QuizInfo'\nimport StartQuiz from './screens/StartQuiz/StartQuiz'\nimport './App.css';\nimport 'typeface-roboto'\nimport { Input } from '@material-ui/core';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      quizzes: [\n\n        {\n          name: 'HTML',\n          image: require(\"./images/html.jpg\") ,\n          description:'HTML stands for HyperText Markup Language, It defines the structure of a Web document by using a variety of tags and attributes.',\n          subQuiz: [\n            {\n              name: 'Quiz 1', questions: '3', time: '3 min', score: false,\n              qArr: [\n                {\n                  question: \"What is use for image insertion?\",\n                  option1: \"img\",\n                  option2: \"h1\",\n                  option3: \"none\",\n                  option4: \"body\",\n                  answer: \"1\"\n                },\n                {\n                  question: \"To underline the text?\",\n                  option1: \"u\",\n                  option2: \"underline\",\n                  option3: \"style\",\n                  option4: \"none\",\n                  answer: \"1\"\n                },\n                {\n\n                  question: \"HTML stands for?\",\n                  option1: \"HYPER TEXT MARKUP LANGUAGE'\",\n                  option2: \"HTPER TEXT TELESCOPR\",\n                  option3: \"HELP TEXT TERMINAL LANGUAGE\",\n                  option4: \"NONE\",\n                  answer: \"1\"\n                },\n\n              ]\n            },\n            {\n              name: 'Quiz 2', questions: '3', time: '3 min', score: false,\n              qArr: [\n                {\n                  question: \"HTML use for?\",\n                  option1: \"structure\",\n                  option2: \"styling\",\n                  option3: \"scripting\",\n                  option4: \"none\",\n                  answer: \"1\"\n                },\n                {\n                  question: \"To underline the text?\",\n                  option1: \"u\",\n                  option2: \"underline\",\n                  option3: \"style\",\n                  option4: \"none\",\n                  answer: \"1\"\n                },\n                {\n\n                  question: \"HTML stands for?\",\n                  option1: \"HYPER TEXT MARKUP LANGUAGE'\",\n                  option2: \"HTPER TEXT TELESCOPR\",\n                  option3: \"HELP TEXT TERMINAL LANGUAGE\",\n                  option4: \"NONE\",\n                  answer: \"1\"\n                }\n              ]\n            },\n          ]\n        },\n        {\n          name: 'CSS',\n          image: require(\"./images/css.jpg\") ,\n          description:'CSS stands for Cascading Style Sheets, It describes how HTML elements are to be displayed on screen, paper, or in other media.',\n          subQuiz: [\n            {\n              name: 'Quiz 1', questions: '6', time: '3 min', score: false,\n              qArr: [\n                {\n                  question: \"Css stands for?\",\n                  option1: \"cascading style sheet'\",\n                  option2: \"cascade sheet style\",\n                  option3: \"color style sheet\",\n                  option4: \"contrast style sheet\",\n                  answer: \"1\"\n                },\n                {\n                  question: \"to change the color we use\",\n                  option1: \"color:\",\n                  option2: \"setColor:\",\n                  option3: \"color-style\",\n                  option4: \"change-color\",\n                  answer: \"1\"\n                },\n                {\n                  question: \"How to link css?\",\n                  option1: \"using link\",\n                  option2: \"using button\",\n                  option3: \"using javascript\",\n                  option4: \"using img\",\n                  answer: \"1\"\n                },\n                {\n                  question: \"To change the color we use?\",\n                  option1: \"color:\",\n                  option2: \"setColor:\",\n                  option3: \"color-style\",\n                  option4: \"change-color\",\n                  answer: \"1\"\n                },\n                {\n                  question: \"How to link css?\",\n                  option1: \"using link\",\n                  option2: \"using button\",\n                  option3: \"using javascript\",\n                  option4: \"using img\",\n                  answer: \"1\"\n                },\n                {\n                  question: \"How to link css?\",\n                  option1: \"using link\",\n                  option2: \"using button\",\n                  option3: \"using javascript\",\n                  option4: \"using img\",\n                  answer: \"1\"\n                },\n\n              ]\n            },\n          ]\n        },\n        {\n          name: 'JavaScript',\n          image:  require(\"./images/js3.jpg\") ,\n          description:' JavaScript is a \"client-side\" programming language. JavaScript scripts are read, interpreted and executed in your Web browser.',\n          subQuiz: [\n            {\n              name: 'Quiz 1', questions: '4', time: '3 min', score: false,\n              qArr: [\n                {\n                  question: \"How to create alert box?\",\n                  option1: \"alert='hello world'\",\n                  option2: \"aler('hello world')\",\n                  option3: \"alert.('hello world')\",\n                  option4: \"alert('hello world')\",\n                  answer: \"4\"\n                },\n                {\n\n                  question: \"How to initialize variable?\",\n                  option1: \"variable name = 'ali'\",\n                  option2: \"var name = 'ali'\",\n                  option3: \"variable: 'ali'\",\n                  option4: \"variable. 'ali'\",\n                  answer: \"2\"\n                },\n                {\n\n                  question: \"How to push value in array?\",\n                  option1: \"arr.push(value)\",\n                  option2: \"arr.push.value\",\n                  option3: \"arr.(value)\",\n                  option4: \"arr.value.push(value)\",\n                  answer: \"1\"\n                },\n                {\n\n                  question: \"What is javascript?\",\n                  option1: \"programming language\",\n                  option2: \"scripting language\",\n                  option3: \"coding language\",\n                  option4: \"web language\",\n                  answer: \"2\"\n                },\n              ]\n            },\n            {\n              name: 'Quiz 2', questions: '6', time: '3 min', score: false,\n              qArr: [\n                {\n\n                  question: \"Which creates random number?\",\n                  option1: \"Math.floor()\",\n                  option2: \"Math.ceil()\",\n                  option3: \"Math.random()\",\n                  option4: \"Math.high\",\n                  answer: \"3\"\n                },\n                {\n\n                  question: \"What does array returns?\",\n                  option1: \"function\",\n                  option2: \"object\",\n                  option3: \"index number\",\n                  option4: \"data type\",\n                  answer: \"2\"\n                },\n                {\n\n                  question: \"Object property name & value are separated by?\",\n                  option1: \"semicolon ;\",\n                  option2: \"colon :\",\n                  option3: \"dot .\",\n                  option4: \"comma ,\",\n                  answer: \"2\"\n                },\n                {\n\n                  question: \"Object properties are separated by?\",\n                  option1: \"comma ,\",\n                  option2: \"dot .\",\n                  option3: \"colon :\",\n                  option4: \"semicolon ;\",\n                  answer: \"1\"\n                },\n                {\n\n                  question: \"What is the correct syntax for object initialization?\",\n                  option1: \"var var_name = {property_name:property_value}\",\n                  option2: \"var var_name = {property_value:property_name}\",\n                  option3: \"var var_value = {property_name:property_value}\",\n                  option4: \"object = {property_name:property_value}\",\n                  answer: \"1\"\n                },\n                {\n\n                  question: \"DOM stands for?\",\n                  option1: \"document object modification\",\n                  option2: \"document observed module\",\n                  option3: \"document object model\",\n                  option4: \"document object module\",\n                  answer: \"3\"\n                },\n              ]\n            },\n          ]\n        },\n\n      ],\n\n\n      quizIndex: null,\n      subQuizIndex: null,\n\n      qstnNo: 0,\n\n      validFlag: false,\n      userFlag: true,\n\n      userName: '',\n      userEmail: '',\n      userPass: '',\n      loginEmail: '',\n      loginPass: '',\n\n      user: localStorage.getItem(\"user\")    };\n\n    // this.userAvailable = this.userAvailable.bind(this)\n\n    this.updateText = this.updateText.bind(this)\n    this.showSignup = this.showSignup.bind(this)\n    this.showLogin = this.showLogin.bind(this)\n    this.register = this.register.bind(this)\n    this.checkValidation = this.checkValidation.bind(this)\n\n    this.joinQuiz = this.joinQuiz.bind(this);\n    this.showList = this.showList.bind(this);\n    this.startQuiz = this.startQuiz.bind(this);\n    this.nextQstn = this.nextQstn.bind(this);\n    this.back = this.back.bind(this);\n\n    this.logout = this.logout.bind(this);\n  }\n\n  async updateText(e) {\n    // console.log(e.target.name)\n    // console.log(e.target.value)\n    const name = e.target.name;\n    const value = e.target.value;\n\n    if (name.match('name')) {\n      await this.setState({\n        userName: value\n      })\n      localStorage.setItem('userName', this.state.userName)\n      \n    }\n    else if (name.match('userEmail')) {\n      await this.setState({\n        userEmail: value\n      })\n      localStorage.setItem('userEmail', this.state.userEmail)\n    }\n    else if (name.match('userPass')) {\n      await this.setState({\n        userPass: value\n      })\n      localStorage.setItem('userPass', this.state.userPass)\n    }\n    else if (name.match('loginEmail')) {\n      await this.setState({\n        loginEmail: value\n      })\n    }\n    else if (name.match('loginPass')) {\n      await this.setState({\n        loginPass: value\n      })\n    }\n  }\n\n  showSignup() {\n    this.setState({\n      userFlag: false,\n      loginEmail: '',\n      loginPass: ''\n    })\n  }\n\n  showLogin() {\n    this.setState({\n      userFlag: true,\n      userName:'',\n      userEmail:'',\n      userPass:'',\n    })\n  }\n   \nregister() {\n  const {userName, userEmail, userPass} = this.state;\n  if(userName === '' || userEmail === '' || userPass === '') {\n   alert('Fill all the fields');\n   }  else {\n     this.setState({\n       userFlag: true,\n       userEmail:'',\n       userPass:'',\n     })\n   }\n }\n\n\n  async checkValidation() {\n    const { loginEmail, loginPass } = this.state\n    if ((loginEmail.match(localStorage.getItem('userEmail'))) && (loginPass.match(localStorage.getItem('userPass')))) {\n      await this.setState({\n        validFlag: true,\n        user: true,\n        auth: true\n      })\n      localStorage.setItem('user', 'true')\n    }\n    console.log(\"Email is Valid :\", this.state.validFlag)\n  }\n\n\n  logout() {\n    this.setState({\n      // quizIndex: null,\n      // subQuizIndex: null,\n      user: 'false',\n      // userFlag: false,\n      validFlag: false,\n      loginEmail: '',\n      loginPass: '',\n      quiz: null,\n      started: null,\n      qstnNo: 0,\n    })\n    localStorage.setItem('user', 'false')\n  }\n\n  joinQuiz(quizIndex) {\n    const { quizzes } = this.state;\n    this.setState({\n      quiz: quizzes[quizIndex],\n      quizIndex: quizIndex,\n      quizName: quizzes[quizIndex].name,\n    });\n  }\n\n  showList() {\n    this.setState({ quiz: null });\n  }\n\n  startQuiz(subQuizIndex) {\n    const { quizzes, quizIndex } = this.state;\n\n    this.setState({\n      started: quizzes[quizIndex].subQuiz[subQuizIndex],\n      subQuizIndex: subQuizIndex,\n      subQuizName: quizzes[quizIndex].subQuiz[subQuizIndex].name,\n    });\n  }\n\n  nextQstn(nextQstnNo) {\n\n    this.setState({\n      qstnNo: nextQstnNo + 1\n    });\n  }\n\n  back() {\n    this.setState({\n      started: null,\n      qstnNo: 0,\n    });\n  }\n\n\n  render() {\n    const { userFlag, validFlag, quizzes, quiz, started, qstnNo, quizName, subQuizName, user } = this.state;\n\n    return (\n        <>\n      <center>\n      <div>\n        {(user === 'false' || user === null) && (userFlag && !validFlag) && <Login showSignup={this.showSignup} validation={this.checkValidation} updateText={this.updateText} />}\n        {(user === 'false' || user === null) && !userFlag && <Signup updateText={this.updateText} showLogin={this.showLogin} register={this.register}/>}\n        {(user === 'true' || (userFlag && validFlag)) && (!quiz && !started) && <QuizList list={quizzes} onPress={this.joinQuiz} logout={this.logout}/>}\n        {(user === 'true' || (userFlag && validFlag)) && (quiz && !started) && <QuizInfo quiz={quiz} onPress={this.startQuiz} onBack={this.showList} logout={this.logout} />}\n        {(user === 'true' || (userFlag && validFlag)) && started && <StartQuiz quizName={quizName} subQuizName={subQuizName} started={started} qstnNo={qstnNo} onPress={this.nextQstn} back={this.back} logout={this.logout} />}\n      </div>\n      </center>\n      </>\n    )\n  }\n\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) {\n    \n    module.hot.accept();\n    }\n\nregisterServiceWorker(); \n\n"],"sourceRoot":""}